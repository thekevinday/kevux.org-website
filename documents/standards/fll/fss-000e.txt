# fss-0002
#
# license: open-standard-license-1.0
#
#
# Note: This file is in fss-0002 format and as a result the example below has to be escaped (can potentially be confusing when reading this raw).
#       The "header\:" in the example below is actually "header:" when processed by fss-0002.

Featureless Settings Specification: 000e - Payload:
  This is a fss-0002 Basic List with two required objects\:
  1) "header".
  2) "payload".

  The header's Content is of type fss-0001 Extended.
  The payload's Content is of any type including raw binary data.

  The payload is required to be the last list Object in the file.
  The payload is recommended to have its size designated in some manner in the "header".
  The designated size is recommended to use the fss-0001 Object "length".
  The fss-0001 Content "part" is suggested to be used for fss-0001 Object "length" to represent a part of a set of packets intended to represent a single object spread across multiple payloads.
  The fss-0001 Object "total" with the Content being a whole positive number is suggested to be used to represent the total number of packets that represent a whole.
  The fss-0001 Object "part" with the Content being a whole positive number is suggested to be used to represent the number identifying which part of the whole it is.
  The payload may contain anything, including NULL characters.
  The payload is terminated by the EOF (end of file) character or when a some designated length is reached.
  The length used to designate the payload size does not necessarily have to be defined in the 'header".
  That is to say, if the payload is expected to be of some pre-defined or static length then a length does even if that length is not provided in the "header".
  Nothing in the payload may be considered a valid list Object and therefore there will be no escaping allowed (No further fss-0002 Basic List Objects are allowed at this point).
  Comments are not considered comments inside the payload and are instead considered part of the payload, as-is.
  The payload may be empty (length may be zero), but the list Object "payload" must still exist.

  The length and status may be in binary, octal, decimal, duodecimal, or hexidecimal numerical format.
  The status may alternatively be represented as the status name string.
  What the status code represents is application specific (or specific to a sub-standard) but may often be used to represent FLL status codes.
  The status, when representing an FLL status code as a number, may contain error and warning bit.
  The status, when representing an FLL status code as a number, the status number is binary sensitive and may not be portable across binaries or systems.
  For FLL status codes, consider using status as a name string to ensure cross-system or cross-binary compatibility.

  Other than the reserved list Objects "header" and "payload" any other valid Object may be specified.

  Example\:
    # fss-000e
    # valid comments are ignored.
    header\:
      type error
      status 296
      length 30

    payload\:
    The program is out of memory.

  Outer Objects would be\:
    1) header
    2) payload

  "header" Objects would be\:
    1.1) type
    1.2) status
    1.3) length

  "header" Contents would be\:
    1.1.1) error
    1.2.1) 296
    1.3.1) 30

  The payload would be\:
    2) The program is out of memory.
